trigger:
  - main

name: Azure Pipelines
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'cc5f7b39-1ca7-42bf-a4b1-2d09858c99f7'

  # Web app name
  webAppName: 'huy-ng-prj-2'

  # Agent VM image name
  vmImageName: 'myAgentPool'

  # Environment name
  environmentName: 'huy-ng-prj-3'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  
  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: $(vmImageName)
    steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
# - stage:
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: $(vmImageName)
#     environment: $(environmentName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: ''
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip